[build-system]
requires = ["setuptools", "setuptools_scm"]
build-backend = "setuptools.build_meta"

[project]
name = "ibisml"
description = "Tools for developing ML pipelines using Ibis"
readme = "README.md"
requires-python = ">= 3.8"
license = { text = "Apache 2.0" }
dynamic = ["version"]
dependencies = ["ibis-framework"]

[project.optional-dependencies]
dask = ["dask[dataframe]"]
dev = ["ibis-framework[duckdb]", "pytest", "scikit-learn"]

[tool.setuptools]
include-package-data = false

[tool.setuptools.packages.find]
include = ["ibisml*"]

[tool.ruff.lint]
select = [
  "F",    # Pyflakes
  "E",    # pycodestyle: Error
  "W",    # pycodestyle: Warning
  "I",    # isort
  # "D",  # pydocstyle # TODO(deepyaman): Add missing docstrings.
  "UP",   # pyupgrade
  # "S",  # flake8-bandit # TODO(deepyaman): Remove assert and ignore tests.
  "BLE",  # flake8-blind-except
  "B",    # flake8-bugbear
  # "A",  # flake8-builtins # TODO(deepyaman): Rename variables.
  "COM",  # flake8-commas
  "C4",   # flake8-comprehensions
  "T10",  # flake8-debugger
  "FA",   # flake8-future-annotations
  "ISC",  # flake8-implicit-str-concat
  "ICN",  # flake8-import-conventions
  "G",    # flake8-logging-format
  "INP",  # flake8-no-pep420
  "PIE",  # flake8-pie
  "T20",  # flake8-print
  "PT",   # flake8-pytest-style
  "Q",    # flake8-quotes
  "RET",  # flake8-return
  "SLF",  # flake8-self
  "SIM",  # flake8-simplify
  "TID",  # flake8-tidy-imports
  "TCH",  # flake8-type-checking
  "PTH",  # flake8-use-pathlib
  "TD",   # flake8-todos
  # "ERA",# eradicate # TODO(deepyaman): Fix commented-out code.
  # "PD", # pandas-vet # TODO(deepyaman): Use `.to_numpy()` instead of `.values`.
  # "PGH",# pygrep-hooks # TODO(deepyaman): Use specific rule codes when ignoring type issues.
  "FLY",  # flynt
  "NPY",  # NumPy-specific rules
  "PERF", # Perflint
  "LOG",  # flake8-logging
  "RUF",  # Ruff-specific rules
]
ignore = [
  "COM812", # missing-trailing-comma
  "ISC001", # single-line-implicit-string-concatenation
  "RET505", # superfluous-else-return, stylistic choice
  "TD003",  # missing-todo-link
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401", "F403"]

[tool.ruff.lint.isort]
split-on-trailing-comma = false

[tool.ruff.format]
skip-magic-trailing-comma = true

[tool.mypy]
ignore_missing_imports = true
